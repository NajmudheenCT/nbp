<project name="open-api" default="make-jar-bundle">
    <description>
        Ant build script example for the Java service 'chassisa-service'.
        The output is a bundle in target/chassisa-service.jar that can be
        copied in the "plugins" folder of the plugin-package.
        -----------------------------------------------------------------------
        NOTE: you don't need to use this command-line script within Eclipse/STS
        use the project builder instead. See the SDK Tutorial for more info.
        -----------------------------------------------------------------------
    </description>

    <!-- SDK folders should be set in environment variables -->
    <property environment="env"/>
    <property name="JAVA_HOME" value="${env.JAVA_HOME}"/>

    <!-- name of the jar output file -->
    <property name="JAR_FILE" value="opensds_common.jar"/>

    <property name="BUILD_DIR" value="${basedir}/target"/>
    <property name="third" value="${basedir}/third"/>
    <property name="CLASSES" value="${BUILD_DIR}/classes"/>
    <property name="RES_DIR" value="${basedir}/src/main/resources"/>

    <target name="clean" description="Do not select this internal target.">
        <delete dir="${BUILD_DIR}"/>
        <mkdir dir="${BUILD_DIR}/classes"/>
    </target>

    <target name="compile-java" depends="clean" description="Do not select this internal target.">
        <path id="buildclasspath">
            <fileset dir="./third/openapi" includes="*.jar"/>
        </path>
        <javac target="1.7" source="1.7" executable="${JAVA_HOME}/bin/javac" nowarn="true"
               includeantruntime="false" destdir="${CLASSES}" fork="true" debug="on" classpathref="buildclasspath">
            <src path="${basedir}/src/main/java"/>
            <compilerarg line="-encoding UTF-8 "/>
        </javac>
    </target>

    <!-- Build the jar -->
    <target name="make-jar-bundle" depends="compile-java"
            description="No need to use this script within Eclipse, use the native project builder!">
        <!-- Add resources -->
         <copy todir="${CLASSES}">
            <fileset dir="${RES_DIR}"/>
        </copy>

        <unjar src="third/openapi/commons-logging-1.2.jar" dest="${CLASSES}" />
        <unjar src="third/openapi/httpclient-4.5.7.jar" dest="${CLASSES}"/>
        <unjar src="third/openapi/httpcore-4.4.11.jar" dest="${CLASSES}"/>
        <unjar src="third/openapi/json-20180813.jar" dest="${CLASSES}"/>
        <delete dir="{CLASSES}/META-INF" description="delete the third META-INF"/>
        <delete dir="${BUILD_DIR}/classes/mozilla" description="delete the useless information"/>

        <jar destfile="${BUILD_DIR}/${JAR_FILE}"
             manifest="${RES_DIR}/META-INF/MANIFEST.MF"
             basedir="${CLASSES}">
        </jar>

    </target>
</project>

